{"gid":"378","title":"mysqlshowprocesslist\u547d\u4ee4\u8be6\u89e3","date":"1420326000","content":"\r\n <h2 style='color: rgb(68, 68, 68); font-family: Verdana, 'Lucida Grande', Arial, Helvetica, sans-serif; font-size: 12px;'><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>SHOW PROCESSLIST\u663e\u793a\u54ea\u4e9b\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528<strong>mysqladmin processlist<\/strong>\u8bed\u53e5\u5f97\u5230\u6b64\u4fe1\u606f\u3002\u5982\u679c\u60a8\u6709SUPER\u6743\u9650\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6240\u6709\u7ebf\u7a0b\u3002\u5426\u5219\uff0c\u60a8\u53ea\u80fd\u770b\u5230\u60a8\u81ea\u5df1\u7684\u7ebf\u7a0b\uff08\u4e5f\u5c31\u662f\uff0c\u4e0e\u60a8\u6b63\u5728\u4f7f\u7528\u7684MySQL\u8d26\u6237\u76f8\u5173\u7684\u7ebf\u7a0b\uff09\u3002\u8bf7\u53c2\u89c1<span style='color:rgb(0, 102, 204);'>13.5.5.3\u8282\uff0c\u201cKILL\u8bed\u6cd5\u201d<\/span>\u3002\u5982\u679c\u60a8\u4e0d\u4f7f\u7528FULL\u5173\u952e\u8bcd\uff0c\u5219\u53ea\u663e\u793a\u6bcf\u4e2a\u67e5\u8be2\u7684\u524d100\u4e2a\u5b57\u7b26\u3002<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>\u672c\u8bed\u53e5\u62a5\u544aTCP\/IP\u8fde\u63a5\u7684\u4e3b\u673a\u540d\u79f0\uff08\u91c7\u7528<i>host_name<\/i>:<i>client_port<\/i>\u683c\u5f0f\uff09\uff0c\u4ee5\u65b9\u4fbf\u5730\u5224\u5b9a\u54ea\u4e2a\u5ba2\u6237\u7aef\u6b63\u5728\u505a\u4ec0\u4e48\u3002<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>\u5982\u679c\u60a8\u5f97\u5230\u201ctoo many connections\u201d\u9519\u8bef\u4fe1\u606f\uff0c\u5e76\u4e14\u60f3\u8981\u4e86\u89e3\u6b63\u5728\u53d1\u751f\u7684\u60c5\u51b5\uff0c\u672c\u8bed\u53e5\u662f\u975e\u5e38\u6709\u7528\u7684\u3002MySQL\u4fdd\u7559\u4e00\u4e2a\u989d\u5916\u7684\u8fde\u63a5\uff0c\u8ba9\u62e5\u6709SUPER\u6743\u9650\u7684 \u8d26\u6237\u4f7f\u7528\uff0c\u4ee5\u786e\u4fdd\u7ba1\u7406\u5458\u80fd\u591f\u968f\u65f6\u8fde\u63a5\u548c\u68c0\u67e5\u7cfb\u7edf\uff08\u5047\u8bbe\u60a8\u6ca1\u6709\u628a\u6b64\u6743\u9650\u7ed9\u4e88\u6240\u6709\u7684\u7528\u6237\uff09\u3002<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>\u8fd9\u4e2a\u547d\u4ee4\u4e2d\u6700\u5173\u952e\u7684\u5c31\u662fstate\u5217\uff0cmysql\u5217\u51fa\u7684\u72b6\u6001\u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\uff1a<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Checking table<br><\/b>\u3000\u6b63\u5728\u68c0\u67e5\u6570\u636e\u8868\uff08\u8fd9\u662f\u81ea\u52a8\u7684\uff09\u3002<br><b>Closing tables<\/b><br>\u3000\u6b63\u5728\u5c06\u8868\u4e2d\u4fee\u6539\u7684\u6570\u636e\u5237\u65b0\u5230\u78c1\u76d8\u4e2d\uff0c\u540c\u65f6\u6b63\u5728\u5173\u95ed\u5df2\u7ecf\u7528\u5b8c\u7684\u8868\u3002\u8fd9\u662f\u4e00\u4e2a\u5f88\u5feb\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u4e0d\u662f\u8fd9\u6837\u7684\u8bdd\uff0c\u5c31\u5e94\u8be5\u786e\u8ba4\u78c1\u76d8\u7a7a\u95f4\u662f\u5426\u5df2\u7ecf\u6ee1\u4e86\u6216\u8005\u78c1\u76d8\u662f\u5426\u6b63\u5904\u4e8e\u91cd\u8d1f\u4e2d\u3002<br><b>Connect Out<\/b><br>\u3000\u590d\u5236\u4ece\u670d\u52a1\u5668\u6b63\u5728\u8fde\u63a5\u4e3b\u670d\u52a1\u5668\u3002<br><b>Copying to tmp table on disk<\/b><br>\u3000\u7531\u4e8e\u4e34\u65f6\u7ed3\u679c\u96c6\u5927\u4e8etmp_table_size\uff0c\u6b63\u5728\u5c06\u4e34\u65f6\u8868\u4ece\u5185\u5b58\u5b58\u50a8\u8f6c\u4e3a\u78c1\u76d8\u5b58\u50a8\u4ee5\u6b64\u8282\u7701\u5185\u5b58\u3002<br><b>Creating tmp table<\/b><br>\u3000\u6b63\u5728\u521b\u5efa\u4e34\u65f6\u8868\u4ee5\u5b58\u653e\u90e8\u5206\u67e5\u8be2\u7ed3\u679c\u3002<br><b>deleting from main table<\/b><br>\u3000\u670d\u52a1\u5668\u6b63\u5728\u6267\u884c\u591a\u8868\u5220\u9664\u4e2d\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u521a\u5220\u9664\u7b2c\u4e00\u4e2a\u8868\u3002<br><b>deleting from reference tables<br><\/b>\u3000\u670d\u52a1\u5668\u6b63\u5728\u6267\u884c\u591a\u8868\u5220\u9664\u4e2d\u7684\u7b2c\u4e8c\u90e8\u5206\uff0c\u6b63\u5728\u5220\u9664\u5176\u4ed6\u8868\u7684\u8bb0\u5f55\u3002<br><b>Flushing tables<br><\/b>\u3000\u6b63\u5728\u6267\u884cFLUSH TABLES\uff0c\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u5173\u95ed\u6570\u636e\u8868\u3002<br><b>Killed<br><\/b>\u3000\u53d1\u9001\u4e86\u4e00\u4e2akill\u8bf7\u6c42\u7ed9\u67d0\u7ebf\u7a0b\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7ebf\u7a0b\u5c06\u4f1a\u68c0\u67e5kill\u6807\u5fd7\u4f4d\uff0c\u540c\u65f6\u4f1a\u653e\u5f03\u4e0b\u4e00\u4e2akill\u8bf7\u6c42\u3002MySQL\u4f1a\u5728\u6bcf\u6b21\u7684\u4e3b\u5faa\u73af\u4e2d\u68c0\u67e5kill\u6807\u5fd7\u4f4d\uff0c\u4e0d\u8fc7\u6709\u4e9b\u60c5\u51b5\u4e0b\u8be5\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u8fc7\u4e00\u5c0f\u6bb5\u624d\u80fd\u6b7b\u6389\u3002\u5982\u679c\u8be5\u7ebf\u7a0b\u7a0b\u88ab\u5176\u4ed6\u7ebf\u7a0b\u9501\u4f4f\u4e86\uff0c\u90a3\u4e48kill\u8bf7\u6c42\u4f1a\u5728\u9501\u91ca\u653e\u65f6\u9a6c\u4e0a\u751f\u6548\u3002<br><b>Locked<\/b><br>\u3000\u88ab\u5176\u4ed6\u67e5\u8be2\u9501\u4f4f\u4e86\u3002<br><b>Sending data<\/b><br>\u3000\u6b63\u5728\u5904\u7406SELECT\u67e5\u8be2\u7684\u8bb0\u5f55\uff0c\u540c\u65f6\u6b63\u5728\u628a\u7ed3\u679c\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002<br><b>Sorting for group<br><\/b>\u3000\u6b63\u5728\u4e3aGROUP BY\u505a\u6392\u5e8f\u3002<br>\u3000Sorting for order<br>\u3000\u6b63\u5728\u4e3aORDER BY\u505a\u6392\u5e8f\u3002<br><b>Opening tables<\/b><br>\u3000\u8fd9\u4e2a\u8fc7\u7a0b\u5e94\u8be5\u4f1a\u5f88\u5feb\uff0c\u9664\u975e\u53d7\u5230\u5176\u4ed6\u56e0\u7d20\u7684\u5e72\u6270\u3002\u4f8b\u5982\uff0c\u5728\u6267ALTER TABLE\u6216LOCK TABLE\u8bed\u53e5\u884c\u5b8c\u4ee5\u524d\uff0c\u6570\u636e\u8868\u65e0\u6cd5\u88ab\u5176\u4ed6\u7ebf\u7a0b\u6253\u5f00\u3002\u6b63\u5c1d\u8bd5\u6253\u5f00\u4e00\u4e2a\u8868\u3002<br><b>Removing duplicates<\/b><br>\u3000\u6b63\u5728\u6267\u884c\u4e00\u4e2aSELECT DISTINCT\u65b9\u5f0f\u7684\u67e5\u8be2\uff0c\u4f46\u662fMySQL\u65e0\u6cd5\u5728\u524d\u4e00\u4e2a\u9636\u6bb5\u4f18\u5316\u6389\u90a3\u4e9b\u91cd\u590d\u7684\u8bb0\u5f55\u3002\u56e0\u6b64\uff0cMySQL\u9700\u8981\u518d\u6b21\u53bb\u6389\u91cd\u590d\u7684\u8bb0\u5f55\uff0c\u7136\u540e\u518d\u628a\u7ed3\u679c\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002<br><b>Reopen table<\/b><br>\u3000\u83b7\u5f97\u4e86\u5bf9\u4e00\u4e2a\u8868\u7684\u9501\uff0c\u4f46\u662f\u5fc5\u987b\u5728\u8868\u7ed3\u6784\u4fee\u6539\u4e4b\u540e\u624d\u80fd\u83b7\u5f97\u8fd9\u4e2a\u9501\u3002\u5df2\u7ecf\u91ca\u653e\u9501\uff0c\u5173\u95ed\u6570\u636e\u8868\uff0c\u6b63\u5c1d\u8bd5\u91cd\u65b0\u6253\u5f00\u6570\u636e\u8868\u3002<br><b>Repair by sorting<\/b><br>\u3000\u4fee\u590d\u6307\u4ee4\u6b63\u5728\u6392\u5e8f\u4ee5\u521b\u5efa\u7d22\u5f15\u3002<br><b>Repair with keycache<\/b><br>\u3000\u4fee\u590d\u6307\u4ee4\u6b63\u5728\u5229\u7528\u7d22\u5f15\u7f13\u5b58\u4e00\u4e2a\u4e00\u4e2a\u5730\u521b\u5efa\u65b0\u7d22\u5f15\u3002\u5b83\u4f1a\u6bd4Repair by sorting\u6162\u4e9b\u3002<br><b>Searching rows for update<br><\/b>\u3000\u6b63\u5728\u8bb2\u7b26\u5408\u6761\u4ef6\u7684\u8bb0\u5f55\u627e\u51fa\u6765\u4ee5\u5907\u66f4\u65b0\u3002\u5b83\u5fc5\u987b\u5728UPDATE\u8981\u4fee\u6539\u76f8\u5173\u7684\u8bb0\u5f55\u4e4b\u524d\u5c31\u5b8c\u6210\u4e86\u3002<br><b>Sleeping<\/b><br>\u3000\u6b63\u5728\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u65b0\u8bf7\u6c42.<br><b>System lock<\/b><br>\u3000\u6b63\u5728\u7b49\u5f85\u53d6\u5f97\u4e00\u4e2a\u5916\u90e8\u7684\u7cfb\u7edf\u9501\u3002\u5982\u679c\u5f53\u524d\u6ca1\u6709\u8fd0\u884c\u591a\u4e2amysqld\u670d\u52a1\u5668\u540c\u65f6\u8bf7\u6c42\u540c\u4e00\u4e2a\u8868\uff0c\u90a3\u4e48\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0--skip-external-locking\u53c2\u6570\u6765\u7981\u6b62\u5916\u90e8\u7cfb\u7edf\u9501\u3002<br><b>Upgrading lock<\/b><br>\u3000INSERT DELAYED\u6b63\u5728\u5c1d\u8bd5\u53d6\u5f97\u4e00\u4e2a\u9501\u8868\u4ee5\u63d2\u5165\u65b0\u8bb0\u5f55\u3002<br><b>Updating<\/b><br>\u3000\u6b63\u5728\u641c\u7d22\u5339\u914d\u7684\u8bb0\u5f55\uff0c\u5e76\u4e14\u4fee\u6539\u5b83\u4eec\u3002<br><b>User Lock<\/b><br>\u3000\u6b63\u5728\u7b49\u5f85GET_LOCK()\u3002<br><b>Waiting for tables<br><\/b>\u3000\u8be5\u7ebf\u7a0b\u5f97\u5230\u901a\u77e5\uff0c\u6570\u636e\u8868\u7ed3\u6784\u5df2\u7ecf\u88ab\u4fee\u6539\u4e86\uff0c\u9700\u8981\u91cd\u65b0\u6253\u5f00\u6570\u636e\u8868\u4ee5\u53d6\u5f97\u65b0\u7684\u7ed3\u6784\u3002\u7136\u540e\uff0c\u4e3a\u4e86\u80fd\u7684\u91cd\u65b0\u6253\u5f00\u6570\u636e\u8868\uff0c\u5fc5\u987b\u7b49\u5230\u6240\u6709\u5176\u4ed6\u7ebf\u7a0b\u5173\u95ed\u8fd9\u4e2a\u8868\u3002\u4ee5\u4e0b\u51e0\u79cd\u60c5\u51b5\u4e0b\u4f1a\u4ea7\u751f\u8fd9\u4e2a\u901a\u77e5\uff1aFLUSH TABLES tbl_name, ALTER TABLE, RENAME TABLE, REPAIR TABLE, ANALYZE TABLE,\u6216OPTIMIZE TABLE\u3002<br><b>waiting for handler insert<\/b><br>\u3000INSERT DELAYED\u5df2\u7ecf\u5904\u7406\u5b8c\u4e86\u6240\u6709\u5f85\u5904\u7406\u7684\u63d2\u5165\u64cd\u4f5c\uff0c\u6b63\u5728\u7b49\u5f85\u65b0\u7684\u8bf7\u6c42\u3002<br>\u3000\u5927\u90e8\u5206\u72b6\u6001\u5bf9\u5e94\u5f88\u5feb\u7684\u64cd\u4f5c\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u7ebf\u7a0b\u4fdd\u6301\u540c\u4e00\u4e2a\u72b6\u6001\u597d\u51e0\u79d2\u949f\uff0c\u90a3\u4e48\u53ef\u80fd\u662f\u6709\u95ee\u9898\u53d1\u751f\u4e86\uff0c\u9700\u8981\u68c0\u67e5\u4e00\u4e0b\u3002<br>\u3000\u8fd8\u6709\u5176\u4ed6\u7684\u72b6\u6001\u6ca1\u5728\u4e0a\u9762\u4e2d\u5217\u51fa\u6765\uff0c\u4e0d\u8fc7\u5b83\u4eec\u5927\u90e8\u5206\u53ea\u662f\u5728\u67e5\u770b\u670d\u52a1\u5668\u662f\u5426\u6709\u5b58\u5728\u9519\u8bef\u662f\u624d\u7528\u5f97\u7740\u3002<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>mysql \u67e5\u770b\u5f53\u524d\u8fde\u63a5\u6570<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><span style='font-family:\u5b8b\u4f53;'>\u547d\u4ee4\uff1a show processlist;&nbsp;<br>\u5982\u679c\u662froot\u5e10\u53f7\uff0c\u4f60\u80fd\u770b\u5230\u6240\u6709\u7528\u6237\u7684\u5f53\u524d\u8fde\u63a5\u3002\u5982\u679c\u662f\u5176\u5b83\u666e\u901a\u5e10\u53f7\uff0c\u53ea\u80fd\u770b\u5230\u81ea\u5df1\u5360\u7528\u7684\u8fde\u63a5\u3002&nbsp;<br>show processlist;\u53ea\u5217\u51fa\u524d100\u6761\uff0c\u5982\u679c\u60f3\u5168\u5217\u51fa\u8bf7\u4f7f\u7528show full processlist;&nbsp;<br>mysql&gt; show processlist;<\/span><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><span style='font-family:\u5b8b\u4f53;'>\u547d\u4ee4\uff1a show status;<\/span><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><span style='font-family:\u5b8b\u4f53;'>Aborted_clients \u7531\u4e8e\u5ba2\u6237\u6ca1\u6709\u6b63\u786e\u5173\u95ed\u8fde\u63a5\u5df2\u7ecf\u6b7b\u6389\uff0c\u5df2\u7ecf\u653e\u5f03\u7684\u8fde\u63a5\u6570\u91cf\u3002&nbsp;<br>Aborted_connects \u5c1d\u8bd5\u5df2\u7ecf\u5931\u8d25\u7684MySQL\u670d\u52a1\u5668\u7684\u8fde\u63a5\u7684\u6b21\u6570\u3002&nbsp;<br>Connections \u8bd5\u56fe\u8fde\u63a5MySQL\u670d\u52a1\u5668\u7684\u6b21\u6570\u3002&nbsp;<br>Created_tmp_tables \u5f53\u6267\u884c\u8bed\u53e5\u65f6\uff0c\u5df2\u7ecf\u88ab\u521b\u9020\u4e86\u7684\u9690\u542b\u4e34\u65f6\u8868\u7684\u6570\u91cf\u3002&nbsp;<br>Delayed_insert_threads \u6b63\u5728\u4f7f\u7528\u7684\u5ef6\u8fdf\u63d2\u5165\u5904\u7406\u5668\u7ebf\u7a0b\u7684\u6570\u91cf\u3002&nbsp;<br>Delayed_writes \u7528INSERT DELAYED\u5199\u5165\u7684\u884c\u6570\u3002&nbsp;<br>Delayed_errors \u7528INSERT DELAYED\u5199\u5165\u7684\u53d1\u751f\u67d0\u4e9b\u9519\u8bef(\u53ef\u80fd\u91cd\u590d\u952e\u503c)\u7684\u884c\u6570\u3002&nbsp;<br>Flush_commands \u6267\u884cFLUSH\u547d\u4ee4\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_delete \u8bf7\u6c42\u4ece\u4e00\u5f20\u8868\u4e2d\u5220\u9664\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_read_first \u8bf7\u6c42\u8bfb\u5165\u8868\u4e2d\u7b2c\u4e00\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_read_key \u8bf7\u6c42\u6570\u5b57\u57fa\u4e8e\u952e\u8bfb\u884c\u3002&nbsp;<br>Handler_read_next \u8bf7\u6c42\u8bfb\u5165\u57fa\u4e8e\u4e00\u4e2a\u952e\u7684\u4e00\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_read_rnd \u8bf7\u6c42\u8bfb\u5165\u57fa\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u7684\u4e00\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_update \u8bf7\u6c42\u66f4\u65b0\u8868\u4e2d\u4e00\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Handler_write \u8bf7\u6c42\u5411\u8868\u4e2d\u63d2\u5165\u4e00\u884c\u7684\u6b21\u6570\u3002&nbsp;<br>Key_blocks_used \u7528\u4e8e\u5173\u952e\u5b57\u7f13\u5b58\u7684\u5757\u7684\u6570\u91cf\u3002&nbsp;<br>Key_read_requests \u8bf7\u6c42\u4ece\u7f13\u5b58\u8bfb\u5165\u4e00\u4e2a\u952e\u503c\u7684\u6b21\u6570\u3002&nbsp;<br>Key_reads \u4ece\u78c1\u76d8\u7269\u7406\u8bfb\u5165\u4e00\u4e2a\u952e\u503c\u7684\u6b21\u6570\u3002&nbsp;<br>Key_write_requests \u8bf7\u6c42\u5c06\u4e00\u4e2a\u5173\u952e\u5b57\u5757\u5199\u5165\u7f13\u5b58\u6b21\u6570\u3002&nbsp;<br>Key_writes \u5c06\u4e00\u4e2a\u952e\u503c\u5757\u7269\u7406\u5199\u5165\u78c1\u76d8\u7684\u6b21\u6570\u3002&nbsp;<br>Max_used_connections \u540c\u65f6\u4f7f\u7528\u7684\u8fde\u63a5\u7684\u6700\u5927\u6570\u76ee\u3002&nbsp;<br>Not_flushed_key_blocks \u5728\u952e\u7f13\u5b58\u4e2d\u5df2\u7ecf\u6539\u53d8\u4f46\u662f\u8fd8\u6ca1\u88ab\u6e05\u7a7a\u5230\u78c1\u76d8\u4e0a\u7684\u952e\u5757\u3002&nbsp;<br>Not_flushed_delayed_rows \u5728INSERT DELAY\u961f\u5217\u4e2d\u7b49\u5f85\u5199\u5165\u7684\u884c\u7684\u6570\u91cf\u3002&nbsp;<br>Open_tables \u6253\u5f00\u8868\u7684\u6570\u91cf\u3002&nbsp;<br>Open_files \u6253\u5f00\u6587\u4ef6\u7684\u6570\u91cf\u3002&nbsp;<br>Open_streams \u6253\u5f00\u6d41\u7684\u6570\u91cf(\u4e3b\u8981\u7528\u4e8e\u65e5\u5fd7\u8bb0\u8f7d\uff09&nbsp;<br>Opened_tables \u5df2\u7ecf\u6253\u5f00\u7684\u8868\u7684\u6570\u91cf\u3002&nbsp;<br>Questions \u53d1\u5f80\u670d\u52a1\u5668\u7684\u67e5\u8be2\u7684\u6570\u91cf\u3002&nbsp;<br>Slow_queries \u8981\u82b1\u8d85\u8fc7long_query_time\u65f6\u95f4\u7684\u67e5\u8be2\u6570\u91cf\u3002&nbsp;<br>Threads_connected \u5f53\u524d\u6253\u5f00\u7684\u8fde\u63a5\u7684\u6570\u91cf\u3002&nbsp;<br>Threads_running \u4e0d\u5728\u7761\u7720\u7684\u7ebf\u7a0b\u6570\u91cf\u3002&nbsp;<br>Uptime \u670d\u52a1\u5668\u5de5\u4f5c\u4e86\u591a\u5c11\u79d2\u3002<\/span><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>After create<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This occurs when the thread creates a table (including internal temporary tables), at the end of the function that creates the table. This state is used even if the table could not be created due to some error.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Analyzing<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is calculating a MyISAM table key distributions (for example, for ANALYZE TABLE).<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>checking permissions<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is checking whether the server has the required privileges to execute the statement.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Checking table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is performing a table check operation.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>cleaning up<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread has processed one command and is preparing to free memory and reset certain state variables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>closing tables<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is flushing the changed table data to disk and closing the used tables. This should be a fast operation. If not, you should verify that you do not have a full disk and that the disk is not in very heavy use.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>converting HEAP to MyISAM<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is converting an internal temporary table from a MEMORY table to an on-disk MyISAM table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>copy to tmp table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing an ALTER TABLE statement. This state occurs after the table with the new structure has been created but before rows are copied into it.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Copying to group table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>If a statement has different ORDER BY and GROUP BY criteria, the rows are sorted by group and copied to a temporary table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Copying to tmp table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is copying to a temporary table in memory.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Copying to tmp table on disk<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is copying to a temporary table on disk. The temporary result set was larger than tmp_table_size and the thread is changing the temporary table from in-memory to disk-based format to save memory.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Creating index<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing ALTER TABLE ... ENABLE KEYS for a MyISAM table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Creating sort index<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing a SELECT that is resolved using an internal temporary table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>creating table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is creating a table. This includes creation of temporary tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Creating tmp table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is creating a temporary table in memory or on disk. If the table is created in memory but later is converted to an on-disk table, the state during that operation will be Copying to tmp table on disk.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>deleting from main table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is executing the first part of a multiple-table delete. It is deleting only from the first table, and saving columns and offsets to be used for deleting from the other (reference) tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>deleting from reference tables<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is executing the second part of a multiple-table delete and deleting the matched rows from the other tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>discard_or_import_tablespace<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing an ALTER TABLE ... DISCARD TABLESPACE or ALTER TABLE ... IMPORT TABLESPACE statement.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>end<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This occurs at the end but before the cleanup of ALTER TABLE, CREATE VIEW, DELETE, INSERT, SELECT, or UPDATE statements.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>executing<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread has begun executing a statement.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Execution of init_command<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is executing statements in the value of the init_command system variable.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>freeing items<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread has executed a command. This state is usually followed by cleaning up.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Flushing tables<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is executing FLUSH TABLES and is waiting for all threads to close their tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>FULLTEXT initialization<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is preparing to perform a natural-language full-text search.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>init<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This occurs before the initialization of ALTER TABLE, DELETE, INSERT, SELECT, or UPDATE statements.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Killed<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>Someone has sent a KILL statement to the thread and it should abort next time it checks the kill flag. The flag is checked in each major loop in MySQL, but in some cases it might still take a short time for the thread to die. If the thread is locked by some other thread, the kill takes effect as soon as the other thread releases its lock.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Locked<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The query is locked by another query.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>logging slow query<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is writing a statement to the slow-query log.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>NULL<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This state is used for the SHOW PROCESSLIST state.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>login<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The initial state for a connection thread until the client has been authenticated successfully.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Opening tables, Opening table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is trying to open a table. This is should be very fast procedure, unless something prevents opening. For example, an ALTER TABLE or a LOCK TABLE statement can prevent opening a table until the statement is finished.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>preparing<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This state occurs during query optimization.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Purging old relay logs<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is removing unneeded relay log files.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>query end<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This state occurs after processing a query but before the freeing items state.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Reading from net<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is reading a packet from the network.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Removing duplicates<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The query was using SELECT DISTINCT in such a way that MySQL could not optimize away the distinct operation at an early stage. Because of this, MySQL requires an extra stage to remove all duplicated rows before sending the result to the client.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>removing tmp table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is removing an internal temporary table after processing a SELECT statement. This state is not used if no temporary table was created.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>rename<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is renaming a table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>rename result table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing an ALTER TABLE statement, has created the new table, and is renaming it to replace the original table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Reopen tables<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread got a lock for the table, but noticed after getting the lock that the underlying table structure changed. It has freed the lock, closed the table, and is trying to reopen it.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Repair by sorting<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The repair code is using a sort to create indexes.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Repair done<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread has completed a multi-threaded repair for a MyISAM table.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Repair with keycache<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The repair code is using creating keys one by one through the key cache. This is much slower than Repair by sorting.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Rolling back<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is rolling back a transaction.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Saving state<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>For MyISAM table operations such as repair or analysis, the thread is saving the new table state to the .MYI file header. State includes information such as number of rows, the AUTO_INCREMENT counter, and key distributions.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Searching rows for update<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is doing a first phase to find all matching rows before updating them. This has to be done if the UPDATE is changing the index that is used to find the involved rows.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Sending data<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is processing rows for a SELECT statement and also is sending data to the client.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>setup<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is beginning an ALTER TABLE operation.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Sorting for group<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is doing a sort to satisfy a GROUP BY.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Sorting for order<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is doing a sort to satisfy a ORDER BY.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Sorting index<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is sorting index pages for more efficient access during a MyISAM table optimization operation.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Sorting result<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>For a SELECT statement, this is similar to Creating sort index, but for nontemporary tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>statistics<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is calculating statistics to develop a query execution plan.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>System lock<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is going to request or is waiting for an internal or external system lock for the table. If this state is being caused by requests for external locks and you are not using multiple mysqld servers that are accessing the same tables, you can disable external system locks with the --skip-external-locking option. However, external locking is disabled by default, so it is likely that this option will have no effect. For SHOW PROFILE, this state means the thread is requesting the lock (not waiting for it).<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Table lock<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The next thread state after System lock. The thread has acquired an external lock and is going to request an internal table lock.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Updating<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is searching for rows to update and is updating them.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>updating main table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is executing the first part of a multiple-table update. It is updating only the first table, and saving columns and offsets to be used for updating the other (reference) tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>updating reference tables<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is executing the second part of a multiple-table update and updating the matched rows from the other tables.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>User lock<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread is going to request or is waiting for an advisory lock requested with a GET_LOCK() call. For SHOW PROFILE, this state means the thread is requesting the lock (not waiting for it).<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Waiting for tables, Waiting for table<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The thread got a notification that the underlying structure for a table has changed and it needs to reopen the table to get the new structure. However, to reopen the table, it must wait until all other threads have closed the table in question.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>This notification takes place if another thread has used FLUSH TABLES or one of the following statements on the table in question: FLUSH TABLES tbl_name, ALTER TABLE, RENAME TABLE, REPAIR TABLE, ANALYZE TABLE, or OPTIMIZE TABLE.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Waiting on cond<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>A generic state in which the thread is waiting for a condition to become true. No specific state information is available.<\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'><b>Writing to net<\/b><\/p><p style='background-color: rgb(255, 255, 255); color: rgb(0, 0, 0); font-weight: normal;'>The server is writing a packet to the network.<\/p><\/h2>\r\n ","excerpt":"\u00a0SHOWPROCESSLIST\u663e\u793a\u54ea\u4e9b\u7ebf\u7a0b\u6b63\u5728\u8fd0\u884c\u3002\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528mysqladminprocesslist\u8bed\u53e5\u5f97\u5230\u6b64\u4fe1\u606f\u3002\u5982\u679c\u60a8\u6709SUPER\u6743\u9650\uff0c\u60a8\u53ef\u4ee5\u770b\u5230\u6240\u6709\u7ebf\u7a0b\u3002\u5426\u5219\uff0c\u60a8\u53ea\u80fd\u770b\u5230\u60a8\u81ea\u5df1\u7684\u7ebf\u7a0b\uff08\u4e5f\u5c31\u662f\uff0c\u4e0e\u60a8\u6b63\u5728\u4f7f\u7528\u7684MySQL\u8d26\u6237\u76f8\u5173\u7684\u7ebf\u7a0b\uff09\u3002\u8bf7\u53c2\u89c113.5.5.3\u8282\uff0c\u201cKILL\u8bed\u6cd5\u201d\u3002\u5982\u679c\u60a8","author":"1","sortid":"19","type":"blog","views":"48","comnum":"0","tbcount":"0","attnum":"0","top":"n","hide":"n","allow_remark":"y","allow_tb":"y","password":"","thumb":"0","alias":""}